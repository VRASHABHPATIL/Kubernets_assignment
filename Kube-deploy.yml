trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  awsRegion: 'us-east-1'
  clusterName: 'your-eks-cluster-name'
  ecrRepo: '059948106103.dkr.ecr.us-east-1.amazonaws.com/kubernets/boardgame'
  imageTag: 'latest'

stages:
- stage: BuildAndPush
  displayName: "Build and Push Docker Image to ECR"
  jobs:
  - job: Build
    steps:
    - checkout: self

    # Install JDK 17 (compatible with Maven)
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    # Build JAR
    - task: Maven@3
      displayName: "Build JAR with Maven"
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
        publishJUnitResults: false

    # Login to AWS ECR
    - task: AWSShellScript@1
      displayName: "Login to Amazon ECR"
      inputs:
        awsCredentials: 'aws-eks-connection'   # AWS service connection
        regionName: $(awsRegion)
        scriptType: 'inline'
        inlineScript: |
          aws ecr get-login-password --region $(awsRegion) | docker login --username AWS --password-stdin $(ecrRepo)

    # Build Docker image
    - script: |
        docker build -t $(ecrRepo):$(imageTag) .
      displayName: "Build Docker Image"

    # Push Docker image
    - script: |
        docker push $(ecrRepo):$(imageTag)
      displayName: "Push Docker Image to ECR"

- stage: Deploy
  displayName: "Deploy to EKS with kubectl"
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    steps:
    - task: AWSShellScript@1
      displayName: "Deploy using kubectl"
      inputs:
        awsCredentials: 'aws-eks-connection'
        regionName: $(awsRegion)
        scriptType: 'inline'
        inlineScript: |
          aws eks update-kubeconfig --region $(awsRegion) --name $(clusterName)
          kubectl set image deployment/boardgame-deployment boardgame=$(ecrRepo):$(imageTag) -n default
          kubectl apply -f k8s/deployment-service.yaml
