trigger:
- none   # change if your branch is different

pool:
  vmImage: 'ubuntu-latest'

variables:
  awsRegion: 'us-east-1'
  clusterName: 'your-eks-cluster-name'   # <-- change this to your actual EKS cluster name
  ecrRepo: '059948106103.dkr.ecr.us-east-1.amazonaws.com/kubernets/boardgame'
  imageTag: 'latest'   # keeping latest as you said

stages:
- stage: BuildAndPush
  displayName: "Build and Push Docker Image to ECR"
  jobs:
  - job: Build
    steps:
    - checkout: self

    # Login to AWS ECR using Docker registry service connection

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '21'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'


    - task: Maven@3
      displayName: "Build JAR with Maven"
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'package'
        publishJUnitResults: false

    - task: AWSShellScript@1
      displayName: "Login to Amazon ECR"
      inputs:
        awsCredentials: 'aws-eks-connection'   # <-- AWS service connection of type AWS, not dockerregistry
        regionName: 'us-east-1'
        scriptType: 'inline'
        inlineScript: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 059948106103.dkr.ecr.us-east-1.amazonaws.com


    # Build and push image in one go
    - task: Docker@2
      displayName: "Build and Push Docker Image"
      inputs:
        command: buildAndPush
        containerRegistry: 'aws-ecr-acess'
        repository: 'kubernets/boardgame'
        dockerfile: '**/Dockerfile'
        tags: |
          $(imageTag)

- stage: Deploy
  displayName: "Deploy to EKS with kubectl"
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    steps:
    - task: AWSShellScript@1
      displayName: "Deploy using kubectl"
      inputs:
        awsCredentials: 'aws-eks-connection'   # <-- must be AWS service connection
        regionName: $(awsRegion)
        scriptType: 'inline'
        inlineScript: |
          aws eks update-kubeconfig --region $(awsRegion) --name $(clusterName)
          kubectl set image deployment/boardgame-deployment boardgame=$(ecrRepo):$(imageTag) -n default
          kubectl apply -f k8s/deployment-service.yaml
